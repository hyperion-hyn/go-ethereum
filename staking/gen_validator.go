// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package staking

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
)

var _ = (*validatorMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (v Validator) MarshalJSON() ([]byte, error) {
	type Validator struct {
		Address     common.UnprefixedAddress `json:"validator_address" gencodec:"required"`
		Description Description              `json:"description"`
	}
	var enc Validator
	enc.Address = common.UnprefixedAddress(v.Address)
	enc.Description = v.Description
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (v *Validator) UnmarshalJSON(input []byte) error {
	type Validator struct {
		Address     *common.UnprefixedAddress `json:"validator_address" gencodec:"required"`
		Description *Description              `json:"description"`
	}
	var dec Validator
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Address == nil {
		return errors.New("missing required field 'validator_address' for Validator")
	}
	v.Address = common.Address(*dec.Address)
	if dec.Description != nil {
		v.Description = *dec.Description
	}
	return nil
}
